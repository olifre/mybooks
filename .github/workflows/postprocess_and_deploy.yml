name: Build and upload postprocessed books

on:
  - push
  - workflow_dispatch

jobs:
  collect-booklist:
    runs-on: ubuntu-latest
    outputs:
      all_books: ${{ steps.read-json.outputs.ALL_BOOKS }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Read from JSON
        id: read-json
        shell: bash
        run: |
          echo 'ALL_BOOKS<<EOT' >> $GITHUB_OUTPUT
          cat .github/workflows/all_books.json >> $GITHUB_OUTPUT
          echo 'EOT' >> $GITHUB_OUTPUT

  generate-pdfs:
    needs: [ collect-booklist ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-booklist.outputs.all_books) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore git commit times
        run: |
          tools/restore_git_commit_times.sh
          tree -D
      - name: Run pdfLaTeX on ${{ matrix.root_file }}
        uses: xu-cheng/latex-action@v3
        with:
          # The root LaTeX file to be compiled
          root_file: ${{ matrix.root_file }}.tex
          # The working directory for the LaTeX engine
          working_directory: ${{ matrix.working_directory }}
          # The LaTeX engine to be invoked
          compiler: latexmk
          # Extra arguments to be passed to the LaTeX engine
          args: -pdf -file-line-error -interaction=nonstopmode -shell-escape
          # Install extra packages by apk
          extra_system_packages: "bash py-pygments"
      - name: Upload PDF artifact for ${{ matrix.root_file }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-PDF
          path: ${{ matrix.working_directory }}/${{ matrix.root_file }}.pdf
          retention-days: 2

  generate-htmls-singlepage:
    needs: [ collect-booklist ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-booklist.outputs.all_books) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore git commit times
        run: |
          tools/restore_git_commit_times.sh
          tree -D
      - name: Run make4ht on ${{ matrix.root_file }}
        uses: xu-cheng/texlive-action@v3
        with:
          run: |
            unset $(env | egrep '^GITHUB|^RUNNER|^ACTIONS|^HOST|^CI|^INPUT|°SHLVL' |awk -F'=' '{print $1}')
            echo "Cleaned environment:"
            env
            apk add tidyhtml
            cd "${{ matrix.working_directory }}"
            make4ht -a debug --format html5+dvisvgm_hashes+tidy --config make4ht.cfg --build-file ../../shared/lua/domfilters.lua --utf8 --shell-escape --output-dir html-sp ${{ matrix.root_file }} "sections+,svg"
      - name: Fix ownership of make4ht working directory content
        run: |
          sudo chown --reference=. -R "${{ matrix.working_directory }}"
      - name: Add navigation icons to html-sp directory
        run: |
          cp -rv shared/icons "${{ matrix.working_directory }}"/html-sp/
      - name: Add images to html-sp directory
        run: |
          cp -rv shared/images "${{ matrix.working_directory }}"/html-sp/
      - name: Add css to html-sp directory
        run: |
          cp -rv shared/css "${{ matrix.working_directory }}"/html-sp/
      - name: Add js to html-sp directory
        run: |
          cp -rv shared/js "${{ matrix.working_directory }}"/html-sp/
      - name: Upload HTML Single Page artifact for ${{ matrix.root_file }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-HTML-SP
          path: ${{ matrix.working_directory }}/html-sp/*
          retention-days: 2

  generate-htmls-multipage:
    needs: [ collect-booklist ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-booklist.outputs.all_books) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore git commit times
        run: |
          tools/restore_git_commit_times.sh
          tree -D
      - name: Run make4ht on ${{ matrix.root_file }}
        uses: xu-cheng/texlive-action@v3
        with:
          run: |
            unset $(env | egrep '^GITHUB|^RUNNER|^ACTIONS|^HOST|^CI|^INPUT|°SHLVL' |awk -F'=' '{print $1}')
            echo "Cleaned environment:"
            env
            apk add tidyhtml
            cd "${{ matrix.working_directory }}"
            make4ht -a debug --format html5+dvisvgm_hashes+tidy --config make4ht.cfg --build-file ../../shared/lua/domfilters.lua --utf8 --shell-escape --output-dir html-mp ${{ matrix.root_file }} "2,sec-filename,nominitoc,sections+,svg"
      - name: Fix ownership of make4ht working directory content
        run: |
          sudo chown --reference=. -R "${{ matrix.working_directory }}"
      - name: Add navigation icons to html-mp directory
        run: |
          cp -rv shared/icons "${{ matrix.working_directory }}"/html-mp/
      - name: Add images to html-mp directory
        run: |
          cp -rv shared/images "${{ matrix.working_directory }}"/html-mp/
      - name: Add css to html-mp directory
        run: |
          cp -rv shared/css "${{ matrix.working_directory }}"/html-mp/
      - name: Add js to html-mp directory
        run: |
          cp -rv shared/js "${{ matrix.working_directory }}"/html-mp/
      - name: Upload HTML Single Page artifact for ${{ matrix.root_file }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-HTML-MP
          path: ${{ matrix.working_directory }}/html-mp/*
          retention-days: 2

  generate-ebooks:
    needs: [ collect-booklist ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-booklist.outputs.all_books) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore git commit times
        run: |
          tools/restore_git_commit_times.sh
          tree -D
      - name: Run tex4ebook on ${{ matrix.root_file }}
        uses: xu-cheng/texlive-action@v3
        with:
          run: |
            unset $(env | egrep '^GITHUB|^RUNNER|^ACTIONS|^HOST|^CI|^INPUT|°SHLVL' |awk -F'=' '{print $1}')
            echo "Cleaned environment:"
            env
            apk add tidyhtml
            apk add zip
            cd "${{ matrix.working_directory }}"
            for format in epub epub3; do
              echo "Converting to ${format}..."
              tex4ebook -a debug --shell-escape ${{ matrix.root_file }} --format ${format}+dvisvgm_hashes --output-dir ebooks/${format}
            done
      - name: Upload EBOOKS artifact for ${{ matrix.root_file }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-EBOOKS
          path: ${{ matrix.working_directory }}/ebooks/*
          retention-days: 2

  convert-epub3-to-mobi-azw3-with-calibre:
    needs: [ generate-ebooks, collect-booklist ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-booklist.outputs.all_books) }}

    steps:
      - name: Download corresponding workflow run artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.root_file }}-EBOOKS
      - name: Install Calibre
        run: |
          sudo apt-get -y update
          sudo apt-get -y install calibre
      - name: Convert to MOBI with Calibre
        run: |
          BOOK_IN=epub3/${{ matrix.root_file }}.epub
          BOOK_OUT=${{ matrix.root_file }}.mobi
          ebook-convert ${BOOK_IN} ${BOOK_OUT} --max-toc-links 100
      - name: Upload MOBI artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-MOBI-CALIBRE
          path: ${{ matrix.root_file }}.mobi
          retention-days: 2
      - name: Convert to AZW3 with Calibre
        run: |
          BOOK_IN=epub3/${{ matrix.root_file }}.epub
          BOOK_OUT=${{ matrix.root_file }}.azw3
          ebook-convert ${BOOK_IN} ${BOOK_OUT} --max-toc-links 100
      - name: Upload AZW3 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-AZW3-CALIBRE
          path: ${{ matrix.root_file }}.azw3
          retention-days: 2

  generate-epubs-calibre:
    needs: [ generate-htmls-singlepage, collect-booklist ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include: ${{ fromJson(needs.collect-booklist.outputs.all_books) }}

    steps:
      - name: Download corresponding workflow run artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.root_file }}-HTML-SP
      - name: Install Calibre
        run: |
          sudo apt-get -y update
          sudo apt-get -y install calibre
      - name: Convert to epub with Calibre
        run: |
          BOOK_IN=${{ matrix.root_file }}.html
          BOOK_OUT=${{ matrix.root_file }}.epub
          ebook-convert ${BOOK_IN} ${BOOK_OUT} --max-toc-links 100 --filter-css=color,background-image,background-color
      - name: Upload EPUB artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.root_file }}-EPUB-CALIBRE
          path: ${{ matrix.root_file }}.epub
          retention-days: 2

  deploy-output:
    needs: [ generate-pdfs, generate-htmls-singlepage, generate-htmls-multipage, generate-ebooks, generate-epubs-calibre, convert-epub3-to-mobi-azw3-with-calibre ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Collect artifacts and create simple index
        run: |
          mkdir -p gh-page/pdfs
          mv -v *-PDF/*.pdf gh-page/pdfs/
          mkdir -p gh-page/htmls-sp
          for SPDIR in *-HTML-SP; do
            mv -v ${SPDIR} gh-page/htmls-sp/${SPDIR%-HTML-SP}
          done
          mkdir -p gh-page/htmls-mp
          for MPDIR in *-HTML-MP; do
            mv -v ${MPDIR} gh-page/htmls-mp/${MPDIR%-HTML-MP}
          done
          mkdir -p gh-page/ebooks
          rsync -avh *-EBOOKS/* gh-page/ebooks/
          mkdir -p gh-page/epubs-calibre
          mv -v *-EPUB-CALIBRE/*.epub gh-page/epubs-calibre/
          mkdir -p gh-page/mobi
          mv -v *-MOBI-CALIBRE/*.mobi gh-page/mobi/
          mkdir -p gh-page/azw3
          mv -v *-AZW3-CALIBRE/*.azw3 gh-page/azw3/
          cp -v index.html style.css gh-page/
          cp -rv shared/images gh-page/

      - name: Generate simple sitemap.xml
        run: |
          cd gh-page
          ../tools/gen_sitemap.sh
          cd ..

      - name: Copy over robots.txt
        run: |
          cp -v robots.txt gh-page/

      - name: Touch .nojekyll
        run: |
          touch gh-page/.nojekyll

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        if: endsWith(github.event.ref, '/main')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./gh-page
          force_orphan: true
